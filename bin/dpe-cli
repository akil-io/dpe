#!/usr/bin/env node
"use strict";

var debug   = require('debug')('dpe:cli');
var util = require('util');
var path = require('path');
var fs  = require('fs');

var program = require('commander');

var Service = require('../lib/service');
var s = new Service({
    init: false
});

program
    .version(require('../package.json').version)
    .option('-f, --file <file>', 'core initiate signal')
    .option('-k, --key <key>', 'local key', s.get('local.key'))
    .option('-u, --url <url>', 'core url', 'localhost')
    .option('-p, --port <port>', 'cli port', s.get('cli.port'));

var jsonSignal = {};

if (program.file) {
    try {
        jsonSignal = JSON.parse(fs.readFileSync(path.resolve(program.file), 'utf8'));
    } catch (e) {
        console.error('Can not parse signal');
        process.exit(1);
    }
}

s.connect('http://' + program.url, program.port, {
    uid: "local",
    key: program.key
}, (err, client) => {
    if (err) {
        console.error(err);
        process.exit(1);
    }

    client.onResponse(function (msg) {
        console.log("ECHO: ", util.inspect(msg, {depth:null,colors:true}));
        process.exit();
    });

    debug('connected  to http://:' + program.url + ":" + program.port);
    debug('send', jsonSignal);
    client.request(jsonSignal);
});


