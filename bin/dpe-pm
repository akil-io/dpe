#!/usr/bin/env node

"use strict";

var program = require('commander');
var os = require('os');
var path = require('path');
var fs = require('fs');
var util = require('util');

var pm2 = require('pm2');

program
    .version(require('../package.json').version)
    .option('-c, --config <config>', 'path to config directory', path.join(os.homedir(), '.dpe'));

program
    .command('configure <instances> <tags> <modules>')
    .description('add server')
    .action(function(instances, tags, modules) {
        var dpeCwd = path.resolve(__dirname, '..');
        var configPath = path.resolve(program.config);

        var pmConfig = {
            "apps": []
        };

        var instanceConfig = {
            "name": "dpe",
            "exec_mode": "fork",
            "script": "./bin/dpe-service",
            "env": {
                "DEBUG": "dpe*"
            },
            "cwd": dpeCwd,
            "args": "--daemon "
        };

        var args = [];
        if (instances > 1) {
            args.push('-p 0');
        }
        args.push('-c ' + configPath);
        args.push('-t ' + tags.split(','));
        args.push('-m ' + modules.split(','));

        instanceConfig.args += args.join(' ');

        for (var i =0; i < instances; i++) {
            var itemConfig = Object.assign({}, instanceConfig);
            itemConfig.name += i;
            pmConfig.apps.push(itemConfig);
        }

        fs.writeFileSync(path.join(configPath, 'pm2.json'), JSON.stringify(pmConfig, null, '  '), 'utf8');

    });

program
    .command('start')
    .description('add server')
    .action(function() {
        var dpeCwd = path.resolve(__dirname, '..');
        var configPath = path.resolve(program.config);

        pm2.connect(function(err) {
            if (err) {
                console.error(err);
                process.exit(2);
            }

            pm2.start(path.join(program.config, 'pm2.json'), function (err) {
                if (err) {
                    console.log(err);
                }
                pm2.disconnect();
                process.exit();
            });
        });
    });

program
    .command('list')
    .description('add server')
    .action(function() {
        var dpeCwd = path.resolve(__dirname, '..');
        var configPath = path.resolve(program.config);

        pm2.connect(function(err) {
            if (err) {
                console.error(err);
                process.exit(2);
            }

            pm2.list(function (err, processes) {
                if (err) {
                    console.log(err);
                }
                console.log(util.inspect(processes, {depth:null,colors:true}));
                pm2.disconnect();
                process.exit();
            });
        });
    });

program
    .command('stop')
    .description('add server')
    .action(function() {
        var dpeCwd = path.resolve(__dirname, '..');
        var configPath = path.resolve(program.config);

        pm2.connect(function(err) {
            if (err) {
                console.error(err);
                process.exit(2);
            }

            pm2.stop("all", function (err) {
                if (err) {
                    console.log(err);
                }
                pm2.disconnect();
                process.exit();
            });
        });
    });

program
    .command('restart')
    .description('add server')
    .action(function() {
        var dpeCwd = path.resolve(__dirname, '..');
        var configPath = path.resolve(program.config);

        pm2.connect(function(err) {
            if (err) {
                console.error(err);
                process.exit(2);
            }

            pm2.restart("all", function (err) {
                if (err) {
                    console.log(err);
                }
                pm2.disconnect();
                process.exit();
            });
        });
    });

program.parse(process.argv);